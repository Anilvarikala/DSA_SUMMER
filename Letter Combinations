//Letter Combinations of a number.
class Solution {

    public void solve(int i, String digits, String[]mapping,List<String> ans,StringBuilder sb){
        // base case..
        if(i >= digits.length()){
            ans.add(sb.toString());
            return;
        }
        int curr = digits.charAt(i) - '0';
        String str = mapping[curr];
        for(int idx = 0;idx < str.length(); idx++){
            sb.append(str.charAt(idx)+"");
            solve(i+1,digits,mapping,ans,sb);
            sb.setLength(sb.length()-1);
        }

    }
    public List<String> letterCombinations(String digits) {
        List<String> ans = new ArrayList<>();
        if(digits.length() == 0)return ans;
        String []mapping = {"","","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};
        solve(0,digits,mapping,ans,new StringBuilder());
        return ans;
    }
}
